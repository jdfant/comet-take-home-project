# Default values for helloworld.
replicaCount: 1
image:
  repository: jdfant/jd-nginx-helloworld
  pullPolicy: IfNotPresent
  tag: "1.0.1"
imagePullSecrets: []
nameOverride: "nginx-helloworld"
fullnameOverride: ""
serviceAccount:
  create: true
  automount: true
  annotations: {}
  name: ""
podAnnotations: {}
podLabels: {}
podSecurityContext: {}
securityContext: {}
service:
  type: LoadBalancer
  annotations:
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kubernetes.io/target-type: ip
    alb.ingress.kubernetes.io/healthcheck-protocol: HTTP
    alb.ingress.kubernetes.io/healthcheck-port: traffic-port
# For standalone testing of this chart with a local (non-EKS) kubernetes cluster,
# Comment above 'service' block and uncomment 'service' block, below.
#service:
#  type: NodePort
#  port: 80
ingress:
  enabled: false
  className: ""
  annotations: {}
  hosts:
    - host: jd-helloworld-chart.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
resources: {}
livenessProbe:
  httpGet:
    path: /
    port: http
readinessProbe:
  httpGet:
    path: /
    port: http
autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
volumes: []
volumeMounts: []
nodeSelector: {}
tolerations: []
affinity: {}

# Postgresql Subchart Values
postgresql:
    auth:
        username: testuser
        password: testpass
        database: testdb
    primary:
        podSecurityContext:
            enabled: false
            fsGroup: ""
        containerSecurityContext:
            enabled: false
            runAsUser: "auto"

    readReplicas:
        podSecurityContext:
            enabled: false
            fsGroup: ""
        containerSecurityContext:
            enabled: false
            runAsUser: "auto"

    volumePermissions:
        enabled: false
        securityContext:
            runAsUser: "auto"
